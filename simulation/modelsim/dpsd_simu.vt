// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "09/09/2020 18:49:20"
                                                                                
// Verilog Test Bench template for design : dpsd_simu
// 
// Simulation tool : ModelSim (Verilog)
// 

`timescale 1 ns/ 1 ps
module dpsd_simu_vlg_tst();
// constants                                           
// general purpose registers

// test vector input registers
reg clk=0;
reg [27:0] fre_w=28'hDFB;
reg [9:0] pha_w=0;
// wires                                               
wire [11:0]  dds_fir_out;




// assign statements (if any)                          
dpsd_simu i1 (
// port map - connection between master ports and signals/registers   
	.clk(clk),
	.dds_fir_out(dds_fir_out),
	.fre_w(fre_w),
	.pha_w(pha_w)
);
initial                                                
begin                                                  
// code that executes only once                        
// insert code here --> begin                          
                                                       
// --> end                                             
$display("Running testbench");                       
end                                                    
                                              
// optional sensitivity list                           
// @(event1 or event2 or .... eventn) 
always begin                                                  
// code executes for every event on sensitivity list   
// insert code here --> begin                          
  #20 clk=0;
  #20 clk=1;
                                
// --> end                                             
end                                                    
endmodule

